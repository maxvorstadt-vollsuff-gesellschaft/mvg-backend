{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/auth/login": {
      "get": {
        "tags": [
          "auth",
          "mvg"
        ],
        "summary": "Login Redirect",
        "operationId": "redirect_to_login",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/auth/callback": {
      "get": {
        "tags": [
          "auth",
          "mvg"
        ],
        "summary": "Callback",
        "operationId": "process_oauth_callback",
        "parameters": [
          {
            "name": "session_state",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session State"
            }
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "auth",
          "mvg"
        ],
        "summary": "Refresh Token",
        "operationId": "refresh_access_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "auth",
          "mvg"
        ],
        "summary": "Logout",
        "operationId": "logout_user",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "auth",
          "mvg"
        ],
        "summary": "Read Users Me",
        "operationId": "read_current_user",
        "parameters": [
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/events": {
      "get": {
        "tags": [
          "events",
          "mvg"
        ],
        "summary": "Events",
        "operationId": "list_events",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  },
                  "title": "Response List Events"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "events",
          "mvg"
        ],
        "summary": "Create Event",
        "operationId": "create_event",
        "parameters": [
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/events/event/{id}": {
      "get": {
        "tags": [
          "events",
          "mvg"
        ],
        "summary": "Get Event",
        "operationId": "get_event_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "events",
          "mvg"
        ],
        "summary": "Delete Event",
        "operationId": "delete_event_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Id"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/events/{event_id}/participate": {
      "post": {
        "tags": [
          "events",
          "mvg"
        ],
        "summary": "Participate",
        "operationId": "add_event_participant",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          },
          {
            "name": "member",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Member"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "events",
          "mvg"
        ],
        "summary": "Remove Participant",
        "operationId": "remove_event_participant",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          },
          {
            "name": "member",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Member"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/events/upcoming": {
      "get": {
        "tags": [
          "events",
          "mvg"
        ],
        "summary": "Events",
        "operationId": "get_upcoming_events",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  },
                  "title": "Response Get Upcoming Events"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/events/calendar": {
      "get": {
        "tags": [
          "events",
          "mvg"
        ],
        "summary": "Get Calendar Events",
        "operationId": "get_calendar_events",
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      }
    },
    "/events/{event_id}/drinks": {
      "get": {
        "tags": [
          "events",
          "mvg"
        ],
        "summary": "Get Drinks For Event",
        "operationId": "list_event_drinks",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          },
          {
            "name": "grouped",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Grouped"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Drink"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Drink"
                        }
                      }
                    }
                  ],
                  "title": "Response List Event Drinks"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/members": {
      "get": {
        "tags": [
          "members",
          "mvg"
        ],
        "summary": "Members",
        "operationId": "list_members",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Member"
                  },
                  "type": "array",
                  "title": "Response List Members"
                }
              }
            }
          }
        }
      }
    },
    "/members/{member_id}/drinks": {
      "get": {
        "tags": [
          "members",
          "mvg",
          "drinks"
        ],
        "summary": "Get Drinks For Event",
        "operationId": "get_member_drinks",
        "parameters": [
          {
            "name": "member_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Member Id"
            }
          },
          {
            "name": "grouped",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Group drinks consumed by event_id",
              "default": false,
              "title": "Grouped"
            },
            "description": "Group drinks consumed by event_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Drink"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Drink"
                        }
                      }
                    }
                  ],
                  "title": "Response Get Member Drinks"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quotes": {
      "get": {
        "tags": [
          "quotes",
          "mvg"
        ],
        "summary": "Get Quotes",
        "operationId": "list_quotes",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Quote"
                  },
                  "title": "Response List Quotes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "quotes",
          "mvg"
        ],
        "summary": "Create Quote",
        "operationId": "create_quote",
        "parameters": [
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/random_quote": {
      "get": {
        "tags": [
          "quotes",
          "mvg"
        ],
        "summary": "Quote Of The Day",
        "operationId": "get_random_quote",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          }
        }
      }
    },
    "/chugs": {
      "get": {
        "tags": [
          "chugging",
          "mvg"
        ],
        "summary": "Events",
        "operationId": "list_chugs",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseChug"
                  },
                  "title": "Response List Chugs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "chugging",
          "mvg"
        ],
        "summary": "Create Event",
        "operationId": "create_chugs",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChug"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/chugs/top-player": {
      "get": {
        "tags": [
          "chugging",
          "mvg"
        ],
        "summary": "Top Player",
        "operationId": "get_top_chuggers",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseChug"
                  },
                  "title": "Response Get Top Chuggers"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/card": {
      "get": {
        "tags": [
          "card",
          "mvg"
        ],
        "summary": "Get Cards",
        "operationId": "get_all_cards",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Card"
                  },
                  "type": "array",
                  "title": "Response Get All Cards"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "card",
          "mvg"
        ],
        "summary": "Create Card",
        "operationId": "create_new_card",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCard"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Card"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/card/{member_id}": {
      "delete": {
        "tags": [
          "card",
          "mvg"
        ],
        "summary": "Delete Card",
        "operationId": "delete_card_by_member_id",
        "parameters": [
          {
            "name": "member_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Member Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Card"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/recipes": {
      "post": {
        "tags": [
          "recipes",
          "mvg"
        ],
        "summary": "Create Recipe",
        "operationId": "create_recipe",
        "parameters": [
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecipeCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recipe"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "recipes",
          "mvg"
        ],
        "summary": "Get All Recipes",
        "operationId": "get_all_recipes",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recipe"
                  },
                  "title": "Response Get All Recipes"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "recipes",
          "mvg"
        ],
        "summary": "Delete Recipe",
        "operationId": "delete_recipe",
        "parameters": [
          {
            "name": "recipe_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Recipe Id"
            }
          },
          {
            "name": "recipe_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Recipe Name"
            }
          },
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Recipe"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/recipes/{recipe_id}": {
      "get": {
        "tags": [
          "recipes",
          "mvg"
        ],
        "summary": "Get Recipe",
        "operationId": "get_recipe_by_id",
        "parameters": [
          {
            "name": "recipe_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Recipe Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recipe"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/upcoming_events": {
      "get": {
        "tags": [
          "events",
          "mvg"
        ],
        "summary": "Get Next Event",
        "operationId": "get_next_upcoming_event",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  },
                  "title": "Response Get Next Upcoming Event"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/hash": {
      "post": {
        "tags": [
          "auth",
          "mvg"
        ],
        "summary": "Set Password",
        "operationId": "hash_password",
        "parameters": [
          {
            "name": "pw",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Pw"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/drinks": {
      "post": {
        "tags": [
          "drinks",
          "mvg"
        ],
        "summary": "Post Drink",
        "operationId": "create_drink",
        "parameters": [
          {
            "name": "args",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Args"
            }
          },
          {
            "name": "kwargs",
            "in": "query",
            "required": true,
            "schema": {
              "title": "Kwargs"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DrinkCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Drink"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BaseChug": {
        "properties": {
          "member": {
            "$ref": "#/components/schemas/Member"
          },
          "time": {
            "type": "integer",
            "title": "Time"
          }
        },
        "type": "object",
        "required": [
          "member",
          "time"
        ],
        "title": "BaseChug"
      },
      "Card": {
        "properties": {
          "member_id": {
            "type": "integer",
            "title": "Member Id"
          },
          "card_uid": {
            "type": "string",
            "title": "Card Uid"
          }
        },
        "type": "object",
        "required": [
          "member_id",
          "card_uid"
        ],
        "title": "Card"
      },
      "CreateCard": {
        "properties": {
          "member_id": {
            "type": "integer",
            "title": "Member Id"
          },
          "card_uid": {
            "type": "string",
            "title": "Card Uid"
          }
        },
        "type": "object",
        "required": [
          "member_id",
          "card_uid"
        ],
        "title": "CreateCard"
      },
      "Drink": {
        "properties": {
          "drink": {
            "type": "string",
            "title": "Drink"
          },
          "ml_alc": {
            "type": "integer",
            "title": "Ml Alc"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "title": "Time"
          },
          "consumer": {
            "$ref": "#/components/schemas/Member"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          }
        },
        "type": "object",
        "required": [
          "drink",
          "ml_alc",
          "id",
          "time",
          "consumer",
          "event"
        ],
        "title": "Drink"
      },
      "DrinkCreate": {
        "properties": {
          "drink": {
            "type": "string",
            "title": "Drink"
          },
          "ml_alc": {
            "type": "integer",
            "title": "Ml Alc"
          },
          "time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time"
          },
          "consumer_id": {
            "type": "integer",
            "title": "Consumer Id"
          },
          "event_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Id"
          }
        },
        "type": "object",
        "required": [
          "drink",
          "ml_alc",
          "time",
          "consumer_id",
          "event_id"
        ],
        "title": "DrinkCreate"
      },
      "Event": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration",
            "description": "Duration in Minutes. Null means open end."
          },
          "view_role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Roles"
              }
            ],
            "description": "Minimum role required to view this event",
            "default": "guest"
          },
          "participate_role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Roles"
              }
            ],
            "description": "Minimum role required to participate in this event",
            "default": "mvg-member"
          },
          "edit_role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Roles"
              }
            ],
            "description": "Minimum role required to edit this event",
            "default": "mvg-member"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "participants": {
            "items": {
              "$ref": "#/components/schemas/Member"
            },
            "type": "array",
            "title": "Participants"
          },
          "author": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Member"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "start_time",
          "location",
          "id",
          "participants",
          "author"
        ],
        "title": "Event"
      },
      "EventCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration",
            "description": "Duration in Minutes. Null means open end."
          },
          "view_role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Roles"
              }
            ],
            "description": "Minimum role required to view this event",
            "default": "guest"
          },
          "participate_role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Roles"
              }
            ],
            "description": "Minimum role required to participate in this event",
            "default": "mvg-member"
          },
          "edit_role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Roles"
              }
            ],
            "description": "Minimum role required to edit this event",
            "default": "mvg-member"
          }
        },
        "type": "object",
        "required": [
          "name",
          "start_time",
          "location"
        ],
        "title": "EventCreate"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Member": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id"
        ],
        "title": "Member"
      },
      "Quote": {
        "properties": {
          "quote": {
            "type": "string",
            "title": "Quote"
          },
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "author": {
            "$ref": "#/components/schemas/Member"
          }
        },
        "type": "object",
        "required": [
          "quote",
          "date",
          "location",
          "id",
          "author"
        ],
        "title": "Quote"
      },
      "QuoteCreate": {
        "properties": {
          "quote": {
            "type": "string",
            "title": "Quote"
          },
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "author_id": {
            "type": "integer",
            "title": "Author Id"
          }
        },
        "type": "object",
        "required": [
          "quote",
          "date",
          "location",
          "author_id"
        ],
        "title": "QuoteCreate"
      },
      "Recipe": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A brief description of the recipe."
          },
          "time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time"
          },
          "situation": {
            "$ref": "#/components/schemas/Situation"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "author": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Member"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "time",
          "situation",
          "id",
          "author"
        ],
        "title": "Recipe"
      },
      "RecipeCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A brief description of the recipe."
          },
          "time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time"
          },
          "situation": {
            "$ref": "#/components/schemas/Situation"
          },
          "author_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "time",
          "situation",
          "author_id"
        ],
        "title": "RecipeCreate"
      },
      "Roles": {
        "type": "string",
        "enum": [
          "guest",
          "mkm-member",
          "mvg-member"
        ],
        "title": "Roles"
      },
      "Situation": {
        "type": "string",
        "enum": [
          "breakfast",
          "lunch",
          "dinner"
        ],
        "title": "Situation"
      },
      "TokenRefreshRequest": {
        "properties": {
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "refresh_token"
        ],
        "title": "TokenRefreshRequest"
      },
      "UploadChug": {
        "properties": {
          "id": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Id"
          },
          "time": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Time"
          }
        },
        "type": "object",
        "required": [
          "id",
          "time"
        ],
        "title": "UploadChug"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}